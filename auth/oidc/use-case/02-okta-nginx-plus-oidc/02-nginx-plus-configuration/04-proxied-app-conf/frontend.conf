# This is the backend application we are protecting with OpenID Connect
upstream my_backend_portal {
    zone my_backend 64k;
    server 127.0.0.1:8443;
}

# Custom log format to include the 'sub' claim in the REMOTE_USER field
log_format main_jwt '$remote_addr - $jwt_claim_sub [$time_local] "$request" $status '
                    '$body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

# Proxy Server
server {
    server_name mysports.test;
    listen 8443 ssl;
    ssl_certificate           /etc/ssl/mysample.crt;
    ssl_certificate_key       /etc/ssl/mysample.key;
    ssl_session_cache         off;
    ssl_prefer_server_ciphers off;
    status_zone               server_mysports_test;
    
    location / {
        root   /usr/share/nginx/html/portal;
        try_files /mysports_portal.html $uri $uri/;
    }
}

# The frontend server - reverse proxy with OpenID Connect authentication
#
server {
    include conf.d/openid_connect.server_conf; # Authorization code flow and Relying Party processing
    error_log /var/log/nginx/error.log debug;  # Reduce severity level as required

    server_name mysports.test;
    listen 443 ssl;

    ssl_certificate           /etc/ssl/mysample.crt;
    ssl_certificate_key       /etc/ssl/mysample.key;
    ssl_session_cache         off;
    ssl_prefer_server_ciphers off;
    status_zone               server_mysports_test;

    gzip on;
    gzip_types *;

    # OpenID Connect based Sign-In
    location / {
        # This site is protected with OpenID Connect
        auth_jwt "" token=$session_jwt;
        error_page 401 = @do_oidc_flow;

        #auth_jwt_key_file $oidc_jwt_keyfile; # Enable when using filename
        auth_jwt_key_request /_jwks_uri; # Enable when using URL

        # Successfully authenticated users are proxied to the backend,
        # with 'sub' claim passed as HTTP header
        proxy_set_header username $jwt_claim_sub;
        proxy_pass https://my_backend_portal;
    }

    # Landing Page for Sign-In
    location /signin {
        root   /usr/share/nginx/html/signin;
        try_files /mysports_signin.html $uri $uri/ ;
    }

    location = /_logout {
        # This location is the default value of $oidc_logout_redirect (in case it wasn't configured)
        # default_type text/plain;
        # return 200 "Logged out\n";
        root   /usr/share/nginx/html/signout;
        try_files /mysports_signout.html $uri $uri/;
    }
}

# vim: syntax=nginx
