# Custom log format to include the 'sub' claim in the REMOTE_USER field
log_format main_jwt '$remote_addr - $jwt_claim_sub [$time_local] "$request" $status '
                    '$body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

upstream idp_backend {
    zone my_backend 64k;
    server aza.net:443;
}

upstream portal_api_backend {
    zone my_backend 64k;
    server aza.net:8091;
}


# The frontend server - reverse proxy with OpenID Connect authentication
#
server {
    include conf.d/oidc.server_conf; # Authorization code flow and Relying Party processing
    error_log /var/log/nginx/error.log debug;  # Reduce severity level as required

    server_name aza.net;
    listen 443 ssl;

    ssl_certificate           /etc/nginx/key/mysample.crt;
    ssl_certificate_key       /etc/nginx/key/mysample.key;
    ssl_session_cache         off;
    ssl_prefer_server_ciphers off;
    status_zone               server_xxx_net;

    gzip on;
    gzip_types *;

    # OpenID Connect based Sign-In
    location / {
        # This site is protected with OpenID Connect
        auth_jwt "" token=$session_jwt;
        error_page 401 = @do_oidc_flow;

        #auth_jwt_key_file $oidc_jwt_keyfile; # Enable when using filename
        auth_jwt_key_request /_jwks_uri; # Enable when using URL

        # Successfully authenticated users are proxied to the backend,
        # with 'sub' claim passed as HTTP header
        proxy_set_header username $jwt_claim_sub;

        root       /etc/nginx/ui;
        try_files  /xxx_portal.html $uri $uri/;
    }

    location /api/v1 {
        proxy_pass http://portal_api_backend;
    }

    # # Landing Page for Sign-In
    # location /signin {
    #     root      /usr/share/nginx/html/signin;
    #     try_files /myxxx_signin.html $uri $uri/ ;
    # }

    # location = /_logout {
    #     # This location is the default value of $oidc_logout_redirect (in case it wasn't configured)
    #     # default_type text/plain;
    #     # return 200 "Logged out\n";
    #     root      /usr/share/nginx/html/signout;
    #     try_files /myxxx_signout.html $uri $uri/;
    # }
}

server {
    error_log /var/log/nginx/error.log debug;  # Reduce severity level as required

    server_name xxx.net;
    listen 443 ssl;

    ssl_certificate           /etc/nginx/key/mysample.crt;
    ssl_certificate_key       /etc/nginx/key/mysample.key;
    ssl_session_cache         off;
    ssl_prefer_server_ciphers off;
    status_zone               server_xxx_net;

    gzip on;
    gzip_types *;

    # OpenID Connect based Sign-In
    location / {
        # proxy_pass https://idp_backend;
        root       /etc/nginx/ui;
        try_files  /xxx_portal.html $uri $uri/;
    }

    # Landing Page for Sign-In
    location /signin {
        root      /etc/nginx/ui;
        try_files /xxx_signin.html $uri $uri/;
    }
    
    location /api/v1 {
        proxy_pass https://idp_backend;
    }
    
    location = /_logout {
        # This location is the default value of $oidc_logout_redirect (in case it wasn't configured)
        # default_type text/plain;
        # return 200 "Logged out\n";
        root      /etc/nginx/ui;
        try_files /xxx_signout.html $uri $uri/;
    }
}

server {
    error_log /var/log/nginx/error.log debug;  # Reduce severity level as required

    server_name xxx.net;
    listen 80;
    status_zone               server_xxx_net;

    gzip on;
    gzip_types *;

    # OpenID Connect based Sign-In
    location / {
        # proxy_pass https://idp_backend;
        root       /etc/nginx/ui;
        try_files  /xxx_portal.html $uri $uri/;
    }

    # Landing Page for Sign-In
    location /signin {
        root      /etc/nginx/ui;
        try_files /xxx_signin.html $uri $uri/;
    }
    
    location /api/v1 {
        proxy_pass http://idp_backend;
    }
    
    location = /_logout {
        # This location is the default value of $oidc_logout_redirect (in case it wasn't configured)
        # default_type text/plain;
        # return 200 "Logged out\n";
        root      /etc/nginx/ui;
        try_files /xxx_signout.html $uri $uri/;
    }
}

# vim: syntax=nginx
